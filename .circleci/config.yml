version: 2.1

orbs: 
  aws-ecr: circleci/aws-ecr@8.1.2
  kubernetes: circleci/kubernetes@1.3.0
  aws-eks: circleci/aws-eks@2.2.0

jobs:
  lint:
    docker:
      - image: alpine
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - run:
          name: Run lint
          command: |
            hadolint Dockerfile

  deploy-image:
    docker: 
      - image: ubuntu:20.04
    steps:
      - checkout
      - run:
          name: Apply parameters to kubernetes deployment script
          command: |
            sed "s/<AWS_ECR_REGISTRY_ID>/$AWS_ECR_REGISTRY_ID/1" .circleci/eks/deployment-template.yaml | \
              sed "s/<TAG>/$CIRCLE_WORKFLOW_ID/1" > .circleci/eks/deployment.yaml              
            cat .circleci/eks/deployment.yaml

      - run:
          name: Install dependencies
          command: |
            apt update
            apt install -y curl unzip
      - kubernetes/install-kubectl
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: nginxHelloWorldApp
          aws-region: $AWS_REGION
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: .circleci/eks/deployment.yaml
          resource-name: deployment/nginx-hello-world-app
          show-kubectl-command: true
workflows:
  build_and_push_image:
    jobs:
      - lint
      - aws-ecr/build-and-push-image:
          create-repo: true
          repo: nginx-hello-world-app
          tag: 'latest,$CIRCLE_WORKFLOW_ID'
          
          requires: [lint]
      - deploy-image:
          requires: [aws-ecr/build-and-push-image]